import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Scanner;
import static java.lang.Double.parseDouble;

/**
 * The APICall class is used to call the AlphaVantage API and retrieve data from it.  It also
 * creates an instance of the InvestmentAdvisor class, which is used to do calculations on the
 * data retrieved from the API.
 */
public class APICall {

    /**
     * API key generated by AlphaVantage
     */
    private static final String API_KEY = "WT5BZXLS82LW5W2Y";
    private String ticker;
    /**
     * Ticker for S & P 500
     */
    private static final String S_AND_P = "SPY";
    private ArrayList <Double> priceList = new ArrayList();
    private ArrayList <Double> sAndPPriceList = new ArrayList();

    private double fiveYearAvg;
    private double tenYearAvg;
    private double allTimeAvg;
    private boolean buySignal;

    /**
     * Sets field ticker, calls gatherData method with both user input ticker and S And P 500
     * ticker.  Takes single quotes off of both ends of ticker passed in.  Calls
     * calculations method as well.
     *
     * @param ticker        User input passed from InvestmentAdvisorDatabase class
     * @throws IOException  Throws up to InvestmentAdvisorDatabase class
     */
    public APICall(String ticker) throws IOException {
        this.ticker = ticker.replace("'", "");
        gatherData(this.ticker, priceList);
        gatherData(S_AND_P, sAndPPriceList);
        calculations();
    }

    public double getFiveYearAvg () {
        return fiveYearAvg;
    }

    public double getTenYearAvg() {
        return tenYearAvg;
    }

    public double getAllTimeAvg() {
        return allTimeAvg;
    }

    public boolean getBuySignal() {
        return buySignal;
    }

    /**
     * Class creates instance of URL class, constructs url.  Uses Scanner class to put data
     * received into variable callData.  Takes any unwanted tokens out of string, and
     * retrieves data that is wanted for this program, which is monthly close data.
     *
     * @param stockTicker   User input
     * @param list          ArrayList that will store data
     * @throws IOException  Thrown to constructor
     */
    public void gatherData(String stockTicker, ArrayList list) throws IOException {

            URL url = new URL(
                    "https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=" +
                    stockTicker + "&apikey=" + API_KEY
            );

            Scanner sc = new Scanner(url.openStream());
            String callData = "";
            while(sc.hasNext()) {
                callData += sc.nextLine();
            }

            String delims = "[,{}: \"]+";
            String[] tokens = callData.split(delims);

            for (int i = 0; i < tokens.length; i++) {
                String str = tokens[i];
                if (str.equals("close")) {
                    list.add(parseDouble(tokens[i + 1]));
                }
            }
    }

    /**
     * Creates two instances of InvestmentAdvisor class, one for the users input stock ticker,
     * the other one for the S and P 500 data.  For the user's requested stock ticker,
     * the five year, ten year, and all time data is calculated.  For the S And P 500,
     * the ten year return is calculated.
     *
     * This method uses the S and P 500 ten year data and the user's stock input to calculate
     * the buySignal field.
     */
    public void calculations() {
        InvestmentAdvisor calcUserTicker = new InvestmentAdvisor(priceList);
        fiveYearAvg = calcUserTicker.calculateFiveYearReturn();
        tenYearAvg = calcUserTicker.calculateTenYearReturn();
        allTimeAvg = calcUserTicker.calculateAllTimeReturn();

        InvestmentAdvisor calcSAndP = new InvestmentAdvisor(sAndPPriceList);
        double sAndPTenYear = calcSAndP.calculateTenYearReturn();

        if (sAndPTenYear > tenYearAvg) {
            buySignal = false;
        } else {
            buySignal = true;
        }
    }
}
